name: olympguide

services:
  db:
    container_name: postgres_db
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable"
    ports:
      - ${PG_EXP_PORT}:${PG_EXP_PORT}
    depends_on:
      - db
  liquibase:
    image: liquibase/liquibase:latest
    container_name: liquibase
    restart: on-failure
    volumes:
      - ./migrations:/liquibase/changelog
    environment:
      - LIQUIBASE_COMMAND_USERNAME=${DB_USER}
      - LIQUIBASE_COMMAND_PASSWORD=${DB_PASSWORD}
      - LIQUIBASE_COMMAND_UPDATE_URL=jdbc:postgresql://db:${DB_PORT}/${DB_NAME}
      - LIQUIBASE_COMMAND_CHANGELOG_FILE=changelog/db.changelog-master.xml
      - LIQUIBASE_COMMAND_DRIVER=org.postgresql.Driver
    depends_on:
      - db
    entrypoint: ["liquibase", "update"]
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ./redis_data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
  email_service:
    build:
      context: ./email_service
      dockerfile: Dockerfile
    container_name: email_service
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    depends_on:
      - redis
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: go_api
    ports:
      - ${API_PORT}:${API_PORT}
    environment:
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - API_PORT=${API_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}
      - BEARER_DATA_LOADER_TOKEN=${BEARER_DATA_LOADER_TOKEN}
    depends_on:
      - db
      - redis
      - prometheus
    restart: on-failure
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: always
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - ./grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: always
networks:
  default:
    name: olympguide_network