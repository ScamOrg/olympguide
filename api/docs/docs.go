// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Support Team",
            "email": "olympguide@mail.ru"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/olympiads": {
            "get": {
                "description": "Возвращает список олимпиад с фильтрацией по уровню, профилю и поисковому запросу. Также поддерживается сортировка.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "olympiads"
                ],
                "summary": "Получить список олимпиад",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр по уровням (можно передавать несколько значений)",
                        "name": "level",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Фильтр по профилям (можно передавать несколько значений)",
                        "name": "profile",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поисковый запрос по названию олимпиады",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле для сортировки (level, profile, name). По умолчанию сортируется по убыванию популярности",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Порядок сортировки (asc, desc). По умолчанию asc, если указан ` + "`" + `sort` + "`" + `",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список олимпиад",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.OlympiadShortResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректные параметры запроса",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/errs.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.OlympiadShortResponse": {
            "type": "object",
            "properties": {
                "level": {
                    "description": "Уровень олимпиады",
                    "type": "integer",
                    "example": 1
                },
                "like": {
                    "description": "Лайкнута ли олимпиада пользователем",
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Название олимпиады",
                    "type": "string",
                    "example": "Олимпиада по математике"
                },
                "olympiad_id": {
                    "description": "ID олимпиады",
                    "type": "integer",
                    "example": 123
                },
                "profile": {
                    "description": "Профиль олимпиады",
                    "type": "string",
                    "example": "math"
                }
            }
        },
        "errs.AppError": {
            "description": "Структура ошибки, возвращаемая API в случае неудачного запроса.",
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP-код ошибки",
                    "type": "integer",
                    "example": 400
                },
                "details": {
                    "description": "Дополнительные сведения об ошибке (если есть)",
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "description": "Сообщение об ошибке",
                    "type": "string",
                    "example": "Invalid request data"
                },
                "type": {
                    "description": "Тип ошибки",
                    "type": "string",
                    "example": "InvalidRequest"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "OlympGuide API",
	Description:      "Это API для продажи олимпгайда за 30 лямов",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
